The `matrix_divided` module
============================

prototype: 
----------
def matrix_divided(matrix, div)

Function:
---------
to return matrix divided all elements within it with div

Args:
-----
matrix: List of lists composed of integers and floats
div: Integer or float to divieded by

Import:
-------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

======================================================================================

Usage Examples:
===============

Basic Examples:
===============

>>> matrix = [[10, 20, 30],[40, 50, 60]]
>>> matrix_divided(matrix, 2)
[[5.0, 10.0, 15.0], [20.0, 25.0, 30.0]]

---

>>> matrix_divided(matrix, -2)
[[-5.0, -10.0, -15.0], [-20.0, -25.0, -30.0]]

======================================================================================

One Row Example:
================

>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5]]

---

>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5]]

======================================================================================

One elements Example:
=====================

>>> matrix = [[10], [20], [30]]
>>> matrix_divided(matrix, 2)
[[5.0], [10.0], [15.0]]

======================================================================================

Tracebacks:
===========

List of lists Examples:
=======================

>>> matrix = [[10, 20, 30],[40, 50, 60], "[70, 80, 90]"]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

---

>>> matrix = [[10, 20, 30],[40, 50, 60], [70, "80", 90]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

---

>>> matrix_divided(20, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

=====================================================================================

float('inf') & float('nan') examples:
=====================================

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

---

>>> matrix_divided(matrix, float('nan'))
[[nan, nan, nan], [nan, nan, nan]]

=====================================================================================

Other examples:
===============

>>> matrix = [[10, 20, 30],[40, 50, 60], [70, 80, 90]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

---

>>> matrix_divided(matrix, '2')
Traceback (most recent call last):
...
TypeError: div must be a number

---

>>> matrix_divided(None)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

---

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

====================================================================================

